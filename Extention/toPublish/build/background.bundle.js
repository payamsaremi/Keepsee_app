console.log("This is the background page."),console.log("Put the background scripts here."),chrome.runtime.onInstalled.addListener((e=>{e.reason===chrome.runtime.OnInstalledReason.INSTALL&&chrome.tabs.create({url:"Onboarding.html"})})),contextMenuItem={id:"openModal",title:"Open modal",contexts:["all"]},chrome.runtime.onMessage.addListener(((e,o,s)=>{if("tabsList"===e.message)return chrome.windows.getAll({populate:!0},(o=>{const r=[];o.forEach((e=>{e.tabs.forEach((e=>{r.push(e)}))})),console.log(r),async function(e){console.log("Processing message",e)}(e).then(s(r))})),!0})),chrome.runtime.onMessage.addListener(((e,o,s)=>{if("openTab"===e.message)return chrome.tabs.create({url:e.url},(e=>{console.log(e)})),!0})),chrome.runtime.onMessage.addListener((e=>{if("openWorkspace"===e.message)return console.log(e.tabs),e.tabs.forEach((e=>{console.log(e.url),chrome.tabs.create({url:e.url})})),!0})),chrome.runtime.onMessage.addListener((e=>{if("closeWorkspace"===e.message)return e.tabIds.forEach((e=>{chrome.tabs.remove(e),console.log(e)})),!0})),chrome.runtime.onMessage.addListener(((e,o,s)=>(console.log(e),"removeTab"===e.message&&(console.log("passed the if statement",e.tabId),chrome.tabs.remove(Number(e.tabId))),s({message:`Tab with id:${tabId} was removed from current open tabs`}),!0)));